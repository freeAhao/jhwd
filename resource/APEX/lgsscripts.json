{
    "pause_recognize": [
        "\n    vars[\"autorecognize\"] = false\n    OutputLogMessage(\"pause_recognize\\n\")\n        ",
        null,
        "\u5173\u95ed\u81ea\u52a8\u8bc6\u522b",
        true
    ],
    "resume_recognize": [
        "\n    vars[\"autorecognize\"] = true\n    OutputLogMessage(\"resume_recognize\\n\")\n        ",
        "",
        "\u5f00\u542f\u81ea\u52a8\u8bc6\u522b",
        true
    ],
    "reloadconfig": [
        "\n    OutputLogMessage(\"reloadconfig\\n\")\n    dofile(vars[\"config_file\"])\n    bindkeys(config,vars)\n        ",
        null,
        "\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e",
        true
    ],
    "leftbutton": [
        "\t\n    vars[\"left\"] = true\n    start_time = GetRunningTime()\n    step = 1\n    xCounter=0\n    yCounter=0\n    dorecoil(vars)",
        "    step = 1\n    xCounter=0\n    yCounter=0\n    vars[\"left\"] = false\n        ",
        "",
        false
    ],
    "rightbutton": [
        "\n    vars[\"right\"] = true\n    --start_time = GetRunningTime()\n    if vars[\"autorecognize\"] then\n        dofile(vars[\"autorecognize_file\"])\n        vars[\"weapon\"] = rweapon\n    end\n    -- \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f\u540e \u6309\u4e0b\u53f3\u952e\u5373\u53ef\u8bfb\u53d6\u65b0\u5f39\u9053\n    if vars[\"debug\"] then\n        dofile(vars[\"weapon_file\"])\n        OutputLogMessage(\"reload weapon data\\n\")\n    end\n\n    dorecoil(vars)\n        ",
        "\n    vars[\"right\"] = false\n",
        "",
        false
    ],
    "aimbutton": [
        "\n    vars[\"aim\"] = true\n        ",
        "\n    vars[\"aim\"] = false\n        ",
        "",
        false
    ],
    "ads": [
        "\n    if vars[\"adsmode\"] == \"HOLD\" then\n        return (vars[\"left\"] and vars[\"right\"]) or (vars[\"left\"] and  IsKeyLockOn(\"Capslock\")) or (vars[\"right\"])\n    end\n    if vars[\"adsmode\"] == \"CLICK\" then\n        return vars[\"left\"] and IsKeyLockOn(\"Capslock\")\n    end\n",
        "",
        "",
        false
    ],
    "dorecoil": [
        "\n    if ads(vars) then\n        ClearLog()\n        OutputLogMessage(\"---Recoil---\\n\")\n\n        if current_time then\n            loading_time=GetRunningTime() - current_time\n            OutputLogMessage(\"Loading:\t\" .. loading_time .. \"\\n\")\n        end\n\n        current_time = GetRunningTime()\n\n        movex = 0\n        movey = 0\n        \n        weapon = table[vars[\"weapon\"]]\n\n        if weapon and vars[\"left\"] then\n            step = math.ceil(((current_time - start_time == 0 and {1} or {current_time - start_time})[1]) / weapon[\"speed\"])\n\n            if step > #weapon[\"countdatax\"] then\t\n                --PressAndReleaseKey(\"x\")\n                --PressAndReleaseMouseButton(1)\n                OutputLogMessage(\"Finished \\n\")\n                if vars[\"debug\"] then\n                    PressAndReleaseMouseButton(1)\n                end\n                return\n            end\n\n\n            ty = weapon[\"countdatay\"][step]\n            tx = weapon[\"countdatax\"][step]\n            movey = math.ceil((current_time - start_time) / (weapon[\"speed\"] * step) * (ty)) - yCounter\n            movex = math.ceil((current_time - start_time) / (weapon[\"speed\"] * step) * (tx)) - xCounter\n            OutputLogMessage(\"ty=\" .. movey .. \"=\" .. ((current_time - start_time) / (weapon[\"speed\"] * step)) .. \" * \" .. ty .. \"-\" .. yCounter .. \"\\n\")\n            OutputLogMessage(\"tx=\" .. movex .. \"=\" .. ((current_time - start_time) / (weapon[\"speed\"] * step)) .. \" * \" .. tx .. \"-\" .. xCounter .. \"\\n\")\n\n            xCounter = movex + xCounter\n            yCounter = movey + yCounter\n            movey = movey * 1\n            movex = movex * 1\n        end\n \n        if (weapon and vars[\"left\"] and weapon[\"single\"] == true) then\n            -- \u8fde\u70b9\u6b66\u5668\u81ea\u52a8\u5f00\u542f\n            if (current_time - start_time) % weapon[\"speed\"] * 1.5<= loading[1] then\t\n                PressAndReleaseMouseButton(1)\n            end\n        elseif (vars[\"aim\"] or vars[\"right\"] == false) then\n            -- \u80a9\u5c04\u7075\u654f\u5ea6\n            movey = movey * 1.5\n        end\n\n        if true then\n            dofile(vars[\"autorecognize_file\"])\n            movey = movey + ry\n            movex = rx + movex\n        end\n        \n        movex = math.floor(movex+0.5)\n        movey = math.floor(movey+0.5)\n\n        OutputLogMessage(\"Weapon:\t\" .. vars[\"weapon\"] .. \"\\n\")\n        OutputLogMessage(\"Step:\t\" .. step .. \"\\n\")\n        OutputLogMessage(\"Move:\t\" .. movex .. \":\" .. movey .. \"\\n\")\n       \n        if movey > 120 then\n            -- move\u6700\u5927\u652f\u6301120\n            movey = 120\n        end\n        if dq[1] and step > #weapon[\"countdatax\"]*(1/4) and vars[\"left\"] then\n            Sleep(1)\n            R=3\n            MoveMouseRelative(-R,R)\n            Sleep(1)\n            MoveMouseRelative(R,R)\n            Sleep(1)\n            MoveMouseRelative(R,-R)\n            Sleep(1)\n            MoveMouseRelative(-R,-R)\n        end\n\n        MoveMouseRelative(movex, movey)\n        Sleep3(loading[1])\n        SetMKeyState(3)\n        end\n",
        "",
        "",
        false
    ],
    "script": [
        "EnablePrimaryMouseButtonEvents(true)\n\nconfig = {{}}\nvars = {{}}\n\ndofile(\"{}\")\nbindkeys(config,vars)\n\nfunction Sleep3(time)\n    local a = GetRunningTime()\n    while GetRunningTime()-a < time do\n    end\nend\n\nfunction OnEvent(event, arg)\n    for _,key in pairs(config[\"keys\"]) do\n\t  buttonconfig = config[key]\n        if arg == buttonconfig[\"button\"] then\n            match = true\n            for _,modifier in pairs(buttonconfig[\"modifier\"]) do\n                if not IsModifierPressed(modifier) then\n                    match = false\n                end\n            end\n            if match then\n                local func = _G[buttonconfig[\"funcPress\"]]\n                if func and event==\"MOUSE_BUTTON_PRESSED\" then\n                    func(vars)\n                    return\n                else\n                    func = _G[buttonconfig[\"funcRelease\"]]\n                    if func then\n                        func(vars)\n                        return\n                    end\n                end\n            end\n        end\n    end\n    if (event == \"M_RELEASED\" and arg == 3) then\n        dorecoil(vars)\n    end\nend\n",
        "",
        "",
        false
    ],
    "bindkeys": [
        "\n    dofile(vars[\"weapon_file\"])\n",
        "",
        "",
        false
    ]
}
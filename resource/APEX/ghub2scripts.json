{
    "reloadconfig": [
        "\n    OutputLogMessage(\"reloadconfig\\n\")\n    dofile(vars[\"config_file\"])\n    bindkeys(config,vars)\n        ",
        null,
        "\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e",
        true
    ],
    "leftbutton": [
        "    dofile(vars[\"autorecognize_file\"])\n    vars[\"weapon\"] = rweapon\t\n    vars[\"left\"] = true\n    start_time = GetRunningTime()\n    step = 1\n    steptemp={}",
        "    step = 1\n    xCounter=0\n    yCounter=0\n    vars[\"left\"] = false\n        ",
        "",
        false
    ],
    "rightbutton": [
        "\n    vars[\"right\"] = true\n    --start_time = GetRunningTime()\n\n    dofile(vars[\"autorecognize_file\"])\n    vars[\"weapon\"] = rweapon\n\n    -- \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f\u540e \u6309\u4e0b\u53f3\u952e\u5373\u53ef\u8bfb\u53d6\u65b0\u5f39\u9053\n    if debug[1] then\n        dofile(vars[\"weapon_file\"])\n    end\n\n    steptemp={}",
        "\n    vars[\"right\"] = false\n\n        ",
        "",
        false
    ],
    "ads": [
        "\n    if vars[\"adsmode\"] == \"HOLD\" then\n        if not table[vars[\"weapon\"]] then\n            return false\n            -- return (mousebtns[1][1] and mousebtns[3][1]) or (mousebtns[1][1] and  IsKeyLockOn(\"Capslock\")) or (mousebtns[1][1] and  step ~= 1) \n        end\n        return (mousebtns[1][1] and mousebtns[3][1]) or (mousebtns[1][1] and  IsKeyLockOn(\"Capslock\")) or (mousebtns[1][1] and  step ~=1)\n    end\n    if vars[\"adsmode\"] == \"CLICK\" then\n        return mousebtns[1][1] and IsKeyLockOn(\"Capslock\")\n    end\n",
        "",
        "",
        false
    ],
    "dorecoil": [
        "    ClearLog()\n    log = \"---Recoil---\\n\"\n\n    if current_time then\n        loading_time=GetRunningTime() - current_time\n        log = log .. \"Loading:\t\" .. loading_time .. \"\\n\"\n    end\n\n    current_time = GetRunningTime()\n\n    movex = 0\n    movey = 0\n    \n    weapon = table[vars[\"weapon\"]]\n\n    if weapon and mousebtns[1][1] then\n        step = math.ceil(((current_time - start_time == 0 and {1} or {current_time - start_time})[1]) / weapon[\"speed\"])\n\n        if step > #weapon[\"countdatax\"] then\t\n            --PressAndReleaseKey(\"x\")\n            --PressAndReleaseMouseButton(1)\n            log = \"Finished \\n\"\n            if debug[1] then\n                PressAndReleaseMouseButton(1)\n            end\n            return\n        end\n\n        ty = weapon[\"countdatay\"][step]\n        tx = weapon[\"countdatax\"][step]\n\n        findstep = false\n        for k, v in ipairs(steptemp) do\n            if k==step then\n                findstep = true\n            end\n        end\n        if not findstep then\n            steptemp[step] = {}\n            steptemp[step][\"start_time\"] =current_time\n            steptemp[step][\"xCounter\"] = 0\n            steptemp[step][\"yCounter\"] = 0\n        end\n\n        movey = math.ceil((current_time - steptemp[step][\"start_time\"]) / weapon[\"speed\"] * (ty)) - steptemp[step][\"yCounter\"]\n        movex = math.ceil((current_time - steptemp[step][\"start_time\"]) / weapon[\"speed\"] * (tx)) - steptemp[step][\"xCounter\"]\n\n        -- OutputLogMessage(\"ty=\" .. movey .. \"=\" .. ((current_time - start_time) / (weapon[\"speed\"] * step)) .. \" * \" .. ty .. \"-\" .. yCounter .. \"\\n\")\n        -- OutputLogMessage(\"tx=\" .. movex .. \"=\" .. ((current_time - start_time) / (weapon[\"speed\"] * step)) .. \" * \" .. tx .. \"-\" .. xCounter .. \"\\n\")\n\n        steptemp[step][\"xCounter\"] = movex + steptemp[step][\"xCounter\"]\n        steptemp[step][\"yCounter\"] = movey + steptemp[step][\"yCounter\"]\n\n        --ty = math.ceil(ty/(weapon[\"speed\"]/loading[1]))\n        --tx = math.ceil(tx/(weapon[\"speed\"]/loading[1]))\n        if mousebtns[3][1] then\n            movey = movey * sensitivity[1]\n            movex = movex * sensitivity[1]\n        else\n            movey = movey * sensitivity[1]\n            movex = movex * sensitivity[1]\n        end\n    end\n\n    if (weapon and mousebtns[1][1] and weapon[\"single\"] == true) then\n        -- \u8fde\u70b9\u6b66\u5668\u81ea\u52a8\u5f00\u542f\n        if (current_time - start_time) % weapon[\"speed\"] * 1.5<= loading[1] then\t\n            PressAndReleaseMouseButton(1)\n        end\n    elseif (vars[\"aim\"] or vars[\"right\"] == false) then\n        -- \u80a9\u5c04\u7075\u654f\u5ea6\n        movey = movey * 1.5\n    end\n--if true and mousebtns[3][1] then\n    if true  then\n        dofile(vars[\"autorecognize_file\"])\n        movey = movey + ry\n        movex = rx + movex\n    end\n    \n    movex = math.floor(movex+0.5)\n    movey = math.floor(movey+0.5)\n\n    if vars[\"weapon\"] then\n        log = log .. \"Weapon:\t\" .. vars[\"weapon\"] .. \"\\n\"\n    end\n    if step then\n        log = log .. \"Step:\t\" .. step .. \"\\n\"\n    end\n    if movex and movey then\n        log = log .. \"Move:\t\" .. movex .. \":\" .. movey .. \"\\n\"\n    end\n    \n    if movey > 120 then\n        -- move\u6700\u5927\u652f\u6301120\n        movey = 120\n    end\n    --if weapon and dq[1] and step > #weapon[\"countdatax\"]*(1/4) and mousebtns[1][1] then\n    if weapon and dq[1] and mousebtns[1][1] then\n        Sleep3(1)\n        R=dqrate[1]\n        MoveMouseRelative(-R,R)\n        Sleep3(1)\n        MoveMouseRelative(R,R)\n        Sleep3(1)\n        MoveMouseRelative(R,-R)\n        Sleep3(1)\n        MoveMouseRelative(-R,-R)\n    end\n    OutputLogMessage(log)\n    MoveMouseRelative(movex,movey)\n\n\n    Sleep3(loading[1])",
        "",
        "",
        false
    ],
    "script": [
        "EnablePrimaryMouseButtonEvents(true)\n\nconfig = {{}}\nvars = {{}}\n\ndofile(\"{}\")\nbindkeys(config, vars)\n\nfunction Sleep3(time)\n    local a = GetRunningTime()\n    while GetRunningTime() - a < time do\n    end\nend\n\nClearLog()\nOutputLogMessage(\"Running\"..\"\\n\")\nfunction OnEvent(event, arg)\n    -- \u83b7\u53d6\u9f20\u6807\u72b6\u6001\n    mousebtns = {{}}\n    for i = 1, 5, 1 do\n         mousebtns[i] = {{}}\n         mousebtns[i][1] = false\n        for _, key in pairs(config[\"keys\"]) do\n            buttonconfig = config[key]\n            if i == buttonconfig[\"button\"] then\n                mousebtns[i][2] = buttonconfig\n            end\n        end\n    end\n\n    while (true) do\n\n        -- \u53ea\u652f\u6301G1-G5 \u548c\u5f53\u524d\u63d2\u5165\u7684\u7f57\u6280\u9f20\u6807\u597d\u50cf\u6ca1\u6709\u5173\u7cfb\n        for i = 1, 5, 1 do\n            iPressed = IsMouseButtonPressed(i)\n            pressed = nil\n            if mousebtns[i][1] ~=  iPressed then\n                -- \u6309\u952e\u72b6\u6001\u6539\u53d8\n                if mousebtns[i][1] then\n                    -- true -> false \u8bf4\u660e\u6309\u952e\u91ca\u653e\n                    pressed = false\n                else\n                    -- false -> true \u8bf4\u660e\u6309\u952e\u6309\u4e0b\n                    pressed = true\n                end\n\n                mousebtns[i][1] = iPressed \n                if pressed == false then\n                    if mousebtns[i][2] ~= nil then\n                        local func = _G[mousebtns[i][2][\"funcRelease\"]]\n                        if func then\n                            func(vars)\n                        end\n                    end\n                elseif pressed == true then\n                    if mousebtns[i][2] ~= nil then\n                        match = true\n                        for _, modifier in pairs(mousebtns[i][2][\"modifier\"]) do\n                            if not IsModifierPressed(modifier) then\n                                match = false\n                            end\n                        end\n                        if match then\n                            local func = _G[mousebtns[i][2][\"funcPress\"]]\n                            if func then\n                                func(vars)\n                            end\n                        end\n                    end\n                end\n            else\n                -- \u6309\u952e\u72b6\u6001\u672a\u6539\u53d8\n                if ads(vars) then\n                    dorecoil(vars)\n                end\n            end\n\n        end\n\n        -- \u4fee\u6539\u811a\u672c\u524d\u505c\u6b62\u5faa\u73af \u5426\u5219ghub\u5d29\u6e83\n        if mousebtns[1][1] and mousebtns[2][1] then\n            OutputLogMessage(\"Exited\\n\")\n            return\n        end\n\n        Sleep(1)\n    end\nend",
        "",
        "",
        false
    ],
    "bindkeys": [
        "\n    dofile(vars[\"weapon_file\"])\n",
        "",
        "",
        false
    ]
}